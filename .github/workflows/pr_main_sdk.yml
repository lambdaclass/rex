name: rex sdk
on:
  push:
    branches: ["main"]
  merge_group:
  pull_request:
    branches: ["**"]
    paths-ignore:
      - "cli/**" # We run this in a separate workflow

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Add Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run cargo check
        run: cargo check --manifest-path sdk/Cargo.toml

      - name: Run cargo build
        run: cargo build --manifest-path sdk/Cargo.toml

      - name: Run cargo clippy
        run: cargo clippy --manifest-path sdk/Cargo.toml --all-targets --all-features -- -D warnings

      - name: Run cargo fmt
        run: cargo fmt --manifest-path sdk/Cargo.toml --all -- --check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@stable

      - name: Caching
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: cargo test --manifest-path sdk/Cargo.toml

  integration-test:
    name: Integration Test - ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: "Vanilla"
            validium: false
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup Rust Environment
        uses: ./.github/actions/setup-rust

      - name: Install solc
        uses: pontem-network/get-solc@master
        with:
          version: v0.8.29
          token: ${{ secrets.GITHUB_TOKEN || '' }}

      - name: Install ethrex
        run: |
          cd ..
          git clone https://github.com/lambdaclass/ethrex.git
          
          echo "ethrex installed successfully"

      # also creates empty verification keys (as workflow runs with exec backend)
      - name: Build prover
        run: |
          cd ../ethrex/crates/l2
          make build-prover
          mkdir -p prover/zkvm/interface/sp1/out && touch prover/zkvm/interface/sp1/out/riscv32im-succinct-zkvm-vk

      - name: Build L1 docker image
        uses: docker/build-push-action@v6
        with:
          context: ../ethrex/
          file: ../ethrex/crates/blockchain/dev/Dockerfile
          tags: ethrex_dev:latest
          push: false

      - name: Start L1 & Deploy contracts
        run: |
          cd  ../ethrex/crates/l2
          touch .env
          CI_ETHREX_WORKDIR=/usr/local/bin \
          ETHREX_DEPLOYER_DEPLOY_RICH=true \
          ETHREX_DEPLOYER_PICO_CONTRACT_ADDRESS=0x00000000000000000000000000000000000000aa \
          ETHREX_DEPLOYER_SP1_CONTRACT_ADDRESS=0x00000000000000000000000000000000000000aa \
          ETHREX_DEPLOYER_RISC0_CONTRACT_ADDRESS=0x00000000000000000000000000000000000000aa \
          ETHREX_L2_VALIDIUM=${{ matrix.validium }} \
          docker compose -f docker-compose-l2.yaml up contract_deployer

      - name: Start Sequencer
        run: |
          cd  ../ethrex/crates/l2
          CI_ETHREX_WORKDIR=/usr/local/bin \
          ETHREX_L2_VALIDIUM=${{ matrix.validium }} \
          ETHREX_WATCHER_BLOCK_DELAY=0 \
          docker compose -f docker-compose-l2.yaml up --detach ethrex_l2

      - name: Run test
        run: |
          sudo chmod -R a+rw crates/l2
          cd crates/l2
          RUST_LOG=info,ethrex_prover_lib=debug make init-prover &
          docker logs --follow ethrex_l2 &
          PROPOSER_COINBASE_ADDRESS=0x0007a881CD95B1484fca47615B64803dad620C8d cargo test l2 --release -- --nocapture --test-threads=1
          killall ethrex_prover -s SIGINT
