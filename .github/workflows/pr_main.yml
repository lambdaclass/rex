permissions:
  contents: read
name: rex integration tests
on:
  push:
    branches: ["main"]
  merge_group:
  pull_request:
    branches: ["**"]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-docker:
    name: Build ethrex docker image
    runs-on: ubuntu-latest
    steps:
      - name: Clone ethrex repo
        run: |
          git clone https://github.com/lambdaclass/ethrex.git ../ethrex
          cd ../ethrex
          git checkout v0.0.4-alpha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build ethrex:unstable docker image
        uses: docker/build-push-action@v6
        with:
          context: ../ethrex
          file: ../ethrex/Dockerfile
          tags: ethrex:unstable
          load: true
          outputs: type=docker,dest=/tmp/ethrex_image.tar

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ethrex_image
          path: /tmp/ethrex_image.tar

  sdk-integration-test:
    name: Integration Test - SDK
    needs: build-docker
    runs-on: ubuntu-latest

    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: false
          large-packages: false
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup Rust Environment
        uses: ./.github/actions/setup-rust

      - name: Install solc
        uses: pontem-network/get-solc@master
        with:
          version: v0.8.29
          token: ${{ secrets.GITHUB_TOKEN || '' }}

      - name: Install ethrex
        run: |
          cd ..
          git clone https://github.com/lambdaclass/ethrex.git
          cd ethrex
          git checkout v0.0.4-alpha
          echo "ethrex installed successfully"

      # also creates empty verification keys (as workflow runs with exec backend)
      - name: Build prover
        run: |
          cd ../ethrex/crates/l2
          make build-prover
          mkdir -p prover/zkvm/interface/sp1/out && touch prover/zkvm/interface/sp1/out/riscv32im-succinct-zkvm-vk

      - name: Download ethrex image artifact
        uses: actions/download-artifact@v4
        with:
          name: ethrex_image
          path: /tmp

      - name: Load ethrex image
        run: |
          docker load --input /tmp/ethrex_image.tar

      - name: Start L1 & Deploy contracts
        run: |
          touch cmd/.env
          cd crates/l2
          DOCKER_ETHREX_WORKDIR=/usr/local/bin \
          ETHREX_DEPLOYER_DEPLOY_RICH=true \
          ETHREX_DEPLOYER_PICO_CONTRACT_ADDRESS=0x00000000000000000000000000000000000000aa \
          ETHREX_DEPLOYER_SP1_CONTRACT_ADDRESS=0x00000000000000000000000000000000000000aa \
          ETHREX_DEPLOYER_RISC0_CONTRACT_ADDRESS=0x00000000000000000000000000000000000000aa \
          ETHREX_L2_VALIDIUM=false \
          docker compose up contract_deployer

      - name: Start Sequencer
        run: |
          cd  ../ethrex/crates/l2
          DOCKER_ETHREX_WORKDIR=/usr/local/bin \
          ETHREX_L2_VALIDIUM=false \
          ETHREX_WATCHER_BLOCK_DELAY=0 \
          docker compose -f docker-compose.yaml up --detach ethrex_l2

      - name: Run test
        run: |
          sudo chmod -R a+rw ../ethrex/crates/l2
          cd ../ethrex/crates/l2
          RUST_LOG=info,ethrex_prover_lib=debug make init-prover &
          docker logs --follow ethrex_l2 &
          cd /home/runner/work/rex/rex/sdk
          PROPOSER_COINBASE_ADDRESS=0x0007a881CD95B1484fca47615B64803dad620C8d cargo test --package rex-sdk --test tests -- --nocapture --test-threads=1
          killall ethrex_prover -s SIGINT

  cli-integration-test:
    name: Integration Test - CLI
    runs-on: ubuntu-latest
    needs: build-docker

    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: false
          large-packages: false
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup Rust Environment
        uses: ./.github/actions/setup-rust

      - name: Install solc
        uses: pontem-network/get-solc@master
        with:
          version: v0.8.29
          token: ${{ secrets.GITHUB_TOKEN || '' }}

      - name: Install ethrex
        run: |
          cd ..
          git clone https://github.com/lambdaclass/ethrex.git
          cd ethrex
          git checkout v0.0.4-alpha
          echo "ethrex installed successfully"

      # also creates empty verification keys (as workflow runs with exec backend)
      - name: Build prover
        run: |
          cd ../ethrex/crates/l2
          make build-prover
          mkdir -p prover/zkvm/interface/sp1/out && touch prover/zkvm/interface/sp1/out/riscv32im-succinct-zkvm-vk

      - name: Download ethrex image artifact
        uses: actions/download-artifact@v4
        with:
          name: ethrex_image
          path: /tmp

      - name: Load ethrex image
        run: |
          docker load --input /tmp/ethrex_image.tar

      - name: Start L1 & Deploy contracts
        run: |
          touch cmd/.env
          cd crates/l2
          DOCKER_ETHREX_WORKDIR=/usr/local/bin \
          ETHREX_DEPLOYER_DEPLOY_RICH=true \
          ETHREX_DEPLOYER_PICO_CONTRACT_ADDRESS=0x00000000000000000000000000000000000000aa \
          ETHREX_DEPLOYER_SP1_CONTRACT_ADDRESS=0x00000000000000000000000000000000000000aa \
          ETHREX_DEPLOYER_RISC0_CONTRACT_ADDRESS=0x00000000000000000000000000000000000000aa \
          ETHREX_L2_VALIDIUM=false \
          docker compose up contract_deployer

      - name: Start Sequencer
        run: |
          cd  ../ethrex/crates/l2
          DOCKER_ETHREX_WORKDIR=/usr/local/bin \
          ETHREX_L2_VALIDIUM=false \
          ETHREX_WATCHER_BLOCK_DELAY=0 \
          docker compose -f docker-compose.yaml up --detach ethrex_l2

      - name: Run test
        run: |
          sudo chmod -R a+rw ../ethrex/crates/l2
          cd ../ethrex/crates/l2
          RUST_LOG=info,ethrex_prover_lib=debug make init-prover &
          docker logs --follow ethrex_l2 &
          cd /home/runner/work/rex/rex
          make cli
          cd cli
          PROPOSER_COINBASE_ADDRESS=0x0007a881CD95B1484fca47615B64803dad620C8d cargo test --package rex --test tests -- --nocapture --test-threads=1
          killall ethrex_prover -s SIGINT

  # The purpose of this job is to add it as a required check in GitHub so that we don't have to add every individual job as a required check
  all-tests:
    #Â "Integration Test" is a required check, don't change the name
    name: Integration Test
    runs-on: ubuntu-latest
    needs: [sdk-integration-test, cli-integration-test]
    # Make sure this job runs even if the previous jobs failed or were skipped
    if: ${{ always() && needs.sdk-integration-test.result != 'skipped' && needs.cli-integration-test.result != 'skipped' }}
    steps:
      - name: Check if any job failed
        run: |
          if [ "${{ needs.sdk-integration-test.result }}" != "success" ]; then
            echo "Job SDK integration test Check failed"
            exit 1
          fi

          if [ "${{ needs.cli-integration-test.result }}" != "success" ]; then
            echo "Job CLI integration test Check failed"
            exit 1
          fi
